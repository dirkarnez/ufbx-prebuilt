name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
      
jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      libraryName: ufbx
      cmakeInstallationPath: ufbx-installation
      tagName: v0.3.1
      mingwTargetZip: ufbx-${{ github.ref_name }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip
    steps:

        - uses: actions/checkout@v3
          with:
            repository: ufbx/ufbx
            path: ufbx_ufbx
            submodules: true
            ref: ${{ env.tagName }}

        - uses: actions/checkout@v3
          with:
            repository: dirkarnez/ufbx
            path: dirkarnez_ufbx
            submodules: true

           
        - name: curl cmake-3.22.2-windows-x86_64.zip
          shell: cmd
          run: |
            curl https://github.com/Kitware/CMake/releases/download/v3.22.2/cmake-3.22.2-windows-x86_64.zip -L --output cmake-3.22.2-windows-x86_64.zip &&^
            dir &&^
            7z.exe x cmake-3.22.2-windows-x86_64.zip
          
        - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
          shell: cmd
          run:  cd /d ${{ github.workspace }} && curl https://github.com/2641797006/c/blob/master/GCC-zip/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z?raw=true -L --output x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z && dir && 7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z

        - name: set PATH, check mingw version, cmake generate, build and install
          shell: cmd
          run: |
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.22.2-windows-x86_64\bin;^
            C:\Windows\System32;
            set CD_LINUX=%CD:\=/%
            xcopy /H /Y /C "dirkarnez_ufbx\CMakeLists.txt" "ufbx_ufbx" &&^
            xcopy /H /Y /C "dirkarnez_ufbx\cmake\config.cmake.in" "ufbx_ufbx\cmake\" &&^
            gcc --version &&^
            cd ufbx_ufbx &&^
            cmake.exe -G "MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build &&^
            cmake --build . &&^
            cmake --install . 

        - name: Archive Release
          uses: thedoctor0/zip-release@master
          with:
            type: 'zip'
            directory: "ufbx_ufbx/cmake-build/${{ env.cmakeInstallationPath }}"
            filename: "${{ env.mingwTargetZip }}"

        - name: Release prebuilt
          uses: ncipollo/release-action@v1
          with:
            artifacts: "cmake-build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
            allowUpdates: true
            token: ${{ secrets.GITHUB_TOKEN }}
